#%RAML 0.8
title: Partner
version: v1
baseUri: http://localhost:3000/api

/users:
  post:
    description: List users
    body:
      application/json:
        schema: !include schemas/partner_request.schema
        example: |
          {
            "email": "joelengt@gmail.com",
            "password": "f50fads8d"
          }

    responses:
        200:
          headers:
              X-Content-Type-Options:
                type: string
              X-XSS-Protection:
                type: string
              X-Application-Content:
                type: string

          body:
            application/json:
              schema: !include schemas/partner_response.schema
              example: |
                {
                  "data": {
                    "id": "SbBGk",
                    "title": "Stiff: The Curious Lives of Human Cadavers",
                    "description": null,
                    "datetime": 1341533193,
                    "genre": "science",
                    "author": "Mary Roach",
                    "link": "http://e-bookmobile.com/books/Stiff"
                  },
                  "success": true,
                  "status": 200
                }

/books:
  get:
    description: Retrieve a specific book title
    responses:
        200:
          headers:
             X-Content-Type-Options:
               type: string
             X-XSS-Protection:
               type: string
             X-Application-Content:
               type: string
          body:
            application/json:
              example: |
                {
                  "data": {
                    "id": "SbBGk",
                    "title": "Stiff: The Curious Lives of Human Cadavers",
                    "description": null,
                    "datetime": 1341533193,
                    "genre": "science",
                    "author": "Mary Roach",
                    "link": "http://e-bookmobile.com/books/Stiff"
                  },
                  "success": true,
                  "status": 200
                }
  post:
    description: Retrieve a specific book title
    body:
      application/json:
        schema: !include schemas/partner_request.schema
        example: |
          {
            "email": "joelengt@gmail.com",
            "password": "f50fads8d"
          }

    responses:
        200:
          headers:
             X-Content-Type-Options:
               type: string
             X-XSS-Protection:
               type: string
             X-Application-Content:
               type: string

          body:
            application/json:
              schema: !include schemas/partner_response.schema
              example: |
                {
                  "data": {
                    "id": "SbBGk",
                    "title": "Stiff: The Curious Lives of Human Cadavers",
                    "description": null,
                    "datetime": 1341533193,
                    "genre": "science",
                    "author": "Mary Roach",
                    "link": "http://e-bookmobile.com/books/Stiff"
                  },
                  "success": true,
                  "status": 200
                }
  put:
  /{bookTitle}:
    get:
      queryParameters:
        author:
          displayName: Author
          type: string
          description: An author's full name
          example: Mary Roach
          required: false
        publicationYear:
          displayName: Pub Year
          type: number
          description: The year released for the first time in the US
          example: 1984
          required: false
        rating:
          displayName: Rating
          type: number
          description: Average rating (1-5) submitted by users
          example: 3.14
          required: false
        isbn:
          displayName: ISBN
          type: string
          minLength: 10
          example: 0321736079?
    put:
      queryParameters:
        access_token:
          displayName: Access Token
          type: string
          description: Token giving you permission to make call
          required: true
    delete:
    /author:
      get:
    /publisher:
      post:


/partner:
  /{bookTitle}:
    get:
      description: Retrieve a specific book title
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "data": {
                    "id": "SbBGk",
                    "title": "Stiff: The Curious Lives of Human Cadavers",
                    "description": null,
                    "datetime": 1341533193,
                    "genre": "science",
                    "author": "Mary Roach",
                    "link": "http://e-bookmobile.com/books/Stiff"
                  },
                  "success": true,
                  "status": 200
                }

/songs:
  description: Collection of available songs in Jukebox
  get:
    description: Get a list of songs based on the song title.
    queryParameters:
      songTitle:
        description: "The title of the song to search (it is case insensitive and doesn't need to match the whole title)"
        required: true
        minLength: 3
        type: string
        example: "Get L"
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "songs": [
                  {
                    "songId": "550e8400-e29b-41d4-a716-446655440000",
                    "songTitle": "Get Lucky"
                  },
                  {
                    "songId": "550e8400-e29b-41d4-a716-446655440111",
                    "songTitle": "Loose yourself to dance"
                  },
                  {
                    "songId": "550e8400-e29b-41d4-a716-446655440222",
                    "songTitle": "Gio sorgio by Moroder"
                  }
                ]
              }
  post:
  /{songId}:
    description: Song entity
    get:
      description: Get the song with `songId = {songId}`
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "songId": "550e8400-e29b-41d4-a716-446655440000",
                  "songTitle": "Get Lucky",
                  "duration": "6:07",
                  "artist": {
                    "artistId": "110e8300-e32b-41d4-a716-664400445500",
                    "artistName": "Daft Punk",
                    "imageURL": "http://travelhymns.com/wp-content/uploads/2013/06/random-access-memories1.jpg"
                  },
                  "album": {
                    "albumId": "183100e3-0e2b-4404-a716-66104d440550",
                    "albumName": "Random Access Memories",
                    "imageURL": "http://upload.wikimedia.org/wikipedia/en/a/a7/Random_Access_Memories.jpg"
                  }
                }
        400:
          body:
            application/json:
              example: |
                {"message": "Song not found"}

    post:
      description: |
        Enters the file content for an existing song entity.
        Use the "binary/octet-stream" content type to specify the content from any consumer (excepting web-browsers).
        Use the "multipart-form/data" content type to upload a file which content will become the file-content


/artists:
  get:
  post:
  /{artistId}:
    get:
    /albums:
      get:
/albums:
  get:
  post:
  /{albumId}:
    get:
    /songs:
      get:
